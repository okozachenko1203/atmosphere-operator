---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: rabbitmqclusters.infra.atmosphere.vexxhost.com
spec:
  group: infra.atmosphere.vexxhost.com
  names:
    kind: RabbitmqCluster
    listKind: RabbitmqClusterList
    plural: rabbitmqclusters
    singular: rabbitmqcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RabbitmqCluster is the Schema for the rabbitmqclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RabbitmqClusterSpec defines the desired state of RabbitmqCluster
            properties:
              imageRepository:
                type: string
            type: object
          status:
            description: RabbitmqClusterStatus defines the observed state of RabbitmqCluster
            properties:
              defaultUser:
                description: Contains references to resources created with the RabbitmqCluster
                  resource.
                properties:
                  secretReference:
                    description: Reference to the Kubernetes Secret containing the
                      credentials of the default user.
                    properties:
                      keys:
                        additionalProperties:
                          type: string
                        description: Key-value pairs in the Secret corresponding to
                          `username`, `password`, `host`, and `port`
                        type: object
                      name:
                        description: Name of the Secret containing the default user
                          credentials
                        type: string
                      namespace:
                        description: Namespace of the Secret containing the default
                          user credentials
                        type: string
                    required:
                    - keys
                    - name
                    - namespace
                    type: object
                  serviceReference:
                    description: Reference to the Kubernetes Service serving the cluster.
                    properties:
                      name:
                        description: Name of the Service serving the cluster
                        type: string
                      namespace:
                        description: Namespace of the Service serving the cluster
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
